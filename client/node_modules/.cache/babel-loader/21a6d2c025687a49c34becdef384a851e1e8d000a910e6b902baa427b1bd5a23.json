{"ast":null,"code":"var _jsxFileName = \"/Users/albaromerok/Desktop/jacando-test/Employee-List/client/src/components/recordList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\n\n// Create a component to show client input in a single record\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Record = props => /*#__PURE__*/_jsxDEV(\"tr\", {\n  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n    children: props.record.firstName\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n    children: props.record.lastName\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n    children: props.record.email\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n    children: props.record.gender\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 5,\n  columnNumber: 3\n}, this);\n\n// Create the main component for displaying the records\n_c = Record;\nexport default function RecordList() {\n  _s();\n  // Initialize state to store the records\n  const [records, setRecords] = useState([]);\n\n  // This fetches the records from the server\n  useEffect(() => {\n    async function getRecords() {\n      const response = await fetch(`http://localhost:5001/record/`);\n\n      // If there is an error show a message\n      if (!response.ok) {\n        const message = `An error occurred: ${response.statusText}`;\n        window.alert(message);\n        return;\n      }\n      const records = await response.json();\n      setRecords(records);\n    }\n    getRecords();\n    return;\n  }, [records.length]);\n\n  // This function will map out the records on the table\n  function recordList() {\n    return records.map(record => {\n      return /*#__PURE__*/_jsxDEV(Record, {\n        record: record\n      }, record._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 14\n      }, this);\n    });\n  }\n\n  // This section will display the table with the records of employees\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"central-div\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Employee List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table table-hover\",\n      style: {\n        marginTop: 20\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"First Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Last Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Gender\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: recordList()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n_s(RecordList, \"2hVe065MKzxnAZ4C3qrhRP61L3w=\");\n_c2 = RecordList;\nvar _c, _c2;\n$RefreshReg$(_c, \"Record\");\n$RefreshReg$(_c2, \"RecordList\");","map":{"version":3,"names":["React","useEffect","useState","Record","props","record","firstName","lastName","email","gender","RecordList","records","setRecords","getRecords","response","fetch","ok","message","statusText","window","alert","json","length","recordList","map","_id","marginTop"],"sources":["/Users/albaromerok/Desktop/jacando-test/Employee-List/client/src/components/recordList.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\n\n// Create a component to show client input in a single record\nconst Record = (props) => (\n  <tr>\n    <td>{props.record.firstName}</td>\n    <td>{props.record.lastName}</td>\n    <td>{props.record.email}</td>\n    <td>{props.record.gender}</td>\n  </tr>\n);\n\n// Create the main component for displaying the records\nexport default function RecordList() {\n  // Initialize state to store the records\n  const [records, setRecords] = useState([]);\n\n  // This fetches the records from the server\n  useEffect(() => {\n    async function getRecords() {\n      const response = await fetch(`http://localhost:5001/record/`);\n\n      // If there is an error show a message\n      if (!response.ok) {\n        const message = `An error occurred: ${response.statusText}`;\n        window.alert(message);\n        return;\n      }\n\n      const records = await response.json();\n      setRecords(records);\n    }\n\n    getRecords();\n\n    return;\n  }, [records.length]);\n\n  // This function will map out the records on the table\n  function recordList() {\n    return records.map((record) => {\n      return <Record record={record} key={record._id} />;\n    });\n  }\n\n  // This section will display the table with the records of employees\n  return (\n    <div className=\"central-div\">\n      <h3>Employee List</h3>\n      <table className=\"table table-hover\" style={{ marginTop: 20 }}>\n        <thead>\n          <tr>\n            <th>First Name</th>\n            <th>Last Name</th>\n            <th>Email</th>\n            <th>Gender</th>\n          </tr>\n        </thead>\n        <tbody>{recordList()}</tbody>\n      </table>\n    </div>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;;AAElD;AAAA;AACA,MAAMC,MAAM,GAAIC,KAAK,iBACnB;EAAA,wBACE;IAAA,UAAKA,KAAK,CAACC,MAAM,CAACC;EAAS;IAAA;IAAA;IAAA;EAAA,QAAM,eACjC;IAAA,UAAKF,KAAK,CAACC,MAAM,CAACE;EAAQ;IAAA;IAAA;IAAA;EAAA,QAAM,eAChC;IAAA,UAAKH,KAAK,CAACC,MAAM,CAACG;EAAK;IAAA;IAAA;IAAA;EAAA,QAAM,eAC7B;IAAA,UAAKJ,KAAK,CAACC,MAAM,CAACI;EAAM;IAAA;IAAA;IAAA;EAAA,QAAM;AAAA;EAAA;EAAA;EAAA;AAAA,QAEjC;;AAED;AAAA,KATMN,MAAM;AAUZ,eAAe,SAASO,UAAU,GAAG;EAAA;EACnC;EACA,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;;EAE1C;EACAD,SAAS,CAAC,MAAM;IACd,eAAeY,UAAU,GAAG;MAC1B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,+BAA8B,CAAC;;MAE7D;MACA,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;QAChB,MAAMC,OAAO,GAAI,sBAAqBH,QAAQ,CAACI,UAAW,EAAC;QAC3DC,MAAM,CAACC,KAAK,CAACH,OAAO,CAAC;QACrB;MACF;MAEA,MAAMN,OAAO,GAAG,MAAMG,QAAQ,CAACO,IAAI,EAAE;MACrCT,UAAU,CAACD,OAAO,CAAC;IACrB;IAEAE,UAAU,EAAE;IAEZ;EACF,CAAC,EAAE,CAACF,OAAO,CAACW,MAAM,CAAC,CAAC;;EAEpB;EACA,SAASC,UAAU,GAAG;IACpB,OAAOZ,OAAO,CAACa,GAAG,CAAEnB,MAAM,IAAK;MAC7B,oBAAO,QAAC,MAAM;QAAC,MAAM,EAAEA;MAAO,GAAMA,MAAM,CAACoB,GAAG;QAAA;QAAA;QAAA;MAAA,QAAI;IACpD,CAAC,CAAC;EACJ;;EAEA;EACA,oBACE;IAAK,SAAS,EAAC,aAAa;IAAA,wBAC1B;MAAA,UAAI;IAAa;MAAA;MAAA;MAAA;IAAA,QAAK,eACtB;MAAO,SAAS,EAAC,mBAAmB;MAAC,KAAK,EAAE;QAAEC,SAAS,EAAE;MAAG,CAAE;MAAA,wBAC5D;QAAA,uBACE;UAAA,wBACE;YAAA,UAAI;UAAU;YAAA;YAAA;YAAA;UAAA,QAAK,eACnB;YAAA,UAAI;UAAS;YAAA;YAAA;YAAA;UAAA,QAAK,eAClB;YAAA,UAAI;UAAK;YAAA;YAAA;YAAA;UAAA,QAAK,eACd;YAAA,UAAI;UAAM;YAAA;YAAA;YAAA;UAAA,QAAK;QAAA;UAAA;UAAA;UAAA;QAAA;MACZ;QAAA;QAAA;QAAA;MAAA,QACC,eACR;QAAA,UAAQH,UAAU;MAAE;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA,QACvB;EAAA;IAAA;IAAA;IAAA;EAAA,QACJ;AAEV;AAAC,GAjDuBb,UAAU;AAAA,MAAVA,UAAU;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}